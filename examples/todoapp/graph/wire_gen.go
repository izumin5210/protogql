// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package graph

import (
	"context"
	"todoapp/graph/loader"
	"todoapp/graph/resolver"
)

// Injectors from wire.go:

func NewApp(contextContext context.Context) (*App, func(), error) {
	taskServiceClient, cleanup, err := provideTaskClient()
	if err != nil {
		return nil, nil, err
	}
	userServiceClient, cleanup2, err := provideUserClient()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	resolverResolver := &resolver.Resolver{
		TaskClient: taskServiceClient,
		UserClient: userServiceClient,
	}
	loaders := &loader.Loaders{
		userClient: userServiceClient,
	}
	app := &App{
		Resolver: resolverResolver,
		Loaders:  loaders,
	}
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
