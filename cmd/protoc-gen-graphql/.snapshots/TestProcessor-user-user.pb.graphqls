type BatchGetUsersRequest @proto(fullName: "testdata.BatchGetUsersRequest", package: "testdata", name: "BatchGetUsersRequest", goPackage: "testdata/user", goName: "BatchGetUsersRequest") {
	userIds: [Int!]! @protoField(name: "user_ids", type: "uint64", goName: "UserIds", goTypeName: "uint64")
}
input BatchGetUsersRequestInput @proto(fullName: "testdata.BatchGetUsersRequest", package: "testdata", name: "BatchGetUsersRequest", goPackage: "testdata/user", goName: "BatchGetUsersRequest") {
	userIds: [Int!]! @protoField(name: "user_ids", type: "uint64", goName: "UserIds", goTypeName: "uint64")
}
type BatchGetUsersResponse @proto(fullName: "testdata.BatchGetUsersResponse", package: "testdata", name: "BatchGetUsersResponse", goPackage: "testdata/user", goName: "BatchGetUsersResponse") {
	users: [User!]! @protoField(name: "users", type: "testdata.User", goName: "Users", goTypeName: "User", goTypePackage: "testdata/user")
}
input BatchGetUsersResponseInput @proto(fullName: "testdata.BatchGetUsersResponse", package: "testdata", name: "BatchGetUsersResponse", goPackage: "testdata/user", goName: "BatchGetUsersResponse") {
	users: [UserInput!]! @protoField(name: "users", type: "testdata.User", goName: "Users", goTypeName: "User", goTypePackage: "testdata/user")
}
type User @proto(fullName: "testdata.User", package: "testdata", name: "User", goPackage: "testdata/user", goName: "User") {
	id: Int! @protoField(name: "id", type: "uint64", goName: "Id", goTypeName: "uint64")
	fullName: String! @protoField(name: "full_name", type: "string", goName: "FullName", goTypeName: "string")
	followeeUserIds: [Int!]! @protoField(name: "followee_user_ids", type: "uint64", goName: "FolloweeUserIds", goTypeName: "uint64")
	followerUserIds: [Int!]! @protoField(name: "follower_user_ids", type: "uint64", goName: "FollowerUserIds", goTypeName: "uint64")
	role: UserRole! @protoField(name: "role", type: "testdata.User.Role", goName: "Role", goTypeName: "User_Role", goTypePackage: "testdata/user")
}
input UserInput @proto(fullName: "testdata.User", package: "testdata", name: "User", goPackage: "testdata/user", goName: "User") {
	id: Int! @protoField(name: "id", type: "uint64", goName: "Id", goTypeName: "uint64")
	fullName: String! @protoField(name: "full_name", type: "string", goName: "FullName", goTypeName: "string")
	followeeUserIds: [Int!]! @protoField(name: "followee_user_ids", type: "uint64", goName: "FolloweeUserIds", goTypeName: "uint64")
	followerUserIds: [Int!]! @protoField(name: "follower_user_ids", type: "uint64", goName: "FollowerUserIds", goTypeName: "uint64")
	role: UserRole! @protoField(name: "role", type: "testdata.User.Role", goName: "Role", goTypeName: "User_Role", goTypePackage: "testdata/user")
}
enum UserRole @proto(fullName: "testdata.User.Role", package: "testdata", name: "Role", goPackage: "testdata/user", goName: "User_Role") {
	ROLE_UNSPECIFIED
	ADMIN
}

